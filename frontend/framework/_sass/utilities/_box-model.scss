@use "../modules/tools.scss";
@use "../wtk.scss";
@use "sass:map";

@each $keyset, $value in wtk.find-settings("aspect-ratio", true) {
  $aspect-ratio: wtk.get("aspect-ratio", $keyset);

  @include tools.extend-selector-with-keyset(".aspect-ratio", $keyset) {
    aspect-ratio: $aspect-ratio;
  }
}

$border-styles: (
  "circle": 100%,
  "round": 100vh,
  "rounded": wtk.get("border", "radius"),
  "square": 0,
);

.border {
  $border: wtk.get("border");

  border: $border;

  @each $coordinate in "left", "right", "top", "bottom" {
    &-#{$coordinate} {
      border-#{$coordinate}: $border;
    }
  }

  @each $key, $value in $border-styles {
    &-#{$key} {
      border: $value;
    }
  }
}

@each $property in margin, padding, gap {
  @each $keyset, $value in wtk.find-settings("spacing", true) {
    $value: wtk.get("spacing", $keyset);

    @include tools.extend-selector-with-keyset(".#{$property}", $keyset) {
      @if ($property == "gap") {
        column-gap: $value;
        row-gap: $value;
      } @else {
        #{$property}-left: $value;
        #{$property}-right: $value;
        #{$property}-top: $value;
        #{$property}-bottom: $value;
      }
    }

    @each $axis in "x", "y" {
      @include tools.extend-selector-with-keyset(
        ".#{$property}-#{$axis}",
        $keyset
      ) {
        @if ($property == "gap") {
          @if ($axis == "x") {
            column-gap: $value;
          } @else {
            row-gap: $value;
          }
        } @else {
          @if ($axis == "x") {
            #{$property}-left: $value;
            #{$property}-right: $value;
          } @else {
            #{$property}-top: $value;
            #{$property}-bottom: $value;
          }
        }
      }
    }

    @if ($property != gap) {
      @each $coordinate in "left", "right", "top", "bottom" {
        @include tools.extend-selector-with-keyset(
          ".#{$property}-#{$coordinate}",
          $keyset
        ) {
          #{$property}-#{$coordinate}: $value;
        }
      }
    }
  }
}

@each $property in width, height {
  $settings: wtk.find-settings($property, true);
  $settings: map.set($settings, "100", 100%);

  @each $keyset, $value in wtk.find-settings($property, true) {
    $value: wtk.get($property, $keyset);

    @include tools.extend-selector-with-keyset(".#{$property}", $keyset) {
      #{$property}: $value;
    }

    @include tools.extend-selector-with-keyset(".max-#{$property}", $keyset) {
      #{$property}: 100%;
      max-#{$property}: $value;
    }

    @include tools.extend-selector-with-keyset(
      ".layout-main-#{$property}",
      $keyset
    ) {
      --layout-main-#{$property}: #{$value};
    }
  }
}

.fit {
  width: 100%;
  height: 100%;
}
